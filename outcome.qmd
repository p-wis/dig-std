---
title: "Team Assignment #3: Outcome - 2y Event Free Survival"
code-fold: true
editor_options: 
  chunk_output_type: console
---

```{r load-data}
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(kableExtra))
suppressPackageStartupMessages(library(survival))
suppressPackageStartupMessages(library(ggsurvfit))
suppressPackageStartupMessages(library(broom))
suppressPackageStartupMessages(library(targets))

tar_load(df)
tar_load(lista_zmiennych)
tar_load(df_trtmt)
```

# Założenia

W grupie osób leczonych chcemy zidentyfikować osoby, które dobrze odpowiedziały na leczenie i określić, które cechy były predyktorami tej dobrej odpowiedzi.

Dobrą odpowiedź na leczenie definiujemy jako

* przeżycie >=2 lata i brak hospitalizacji z powodu zaostrzenia CHF przez >=2 lata 
licząc od czasu ranodmizacji w badaniu

# Implementacja

W zbiorze danych DIG jednym z punktów końcowych był "zgon lub hospitalizacja z powodu zaostrzenia nwd. serca". Ten punkt końcowy reprezentowany jest przez następujące zmienne:  

```{r}
  lista_zmiennych %>%
    filter(
      var_names %in% c("dwhf", "dwhfdays")
    ) %>% 
    kable() %>%
    kable_classic_2()
```

# Model zerowy / Podstawowe statystyki 

```{r}
dwhf_surv <- with(df_trtmt, Surv(dwhfdays,dwhf))
m0 <- survfit(dwhf_surv~1, data= df_trtmt)
```

## Liczba osób

```{r}
n_total <- nrow(df_trtmt)
n_total
```

## Sumaryczna liczba eventów

```{r}
n_events <- sum(df_trtmt$dwhf)
n_events
```


## Liczba obserwacji uciętych

```{r}
n_censored <- n_total - n_events
n_censored
```


## Czas obserwacji 

### Dni
```{r}
summary(df_trtmt$dwhfdays)
```

### Lata
```{r}
summary(df_trtmt$dwhfdays / 365.25)
```

## Skumulowana częstość występowania zdarzenia

```{r}
m0 %>%
  ggsurvfit() +
  add_confidence_interval() +
  add_risktable() +
  labs(
    title = "Cumulative Incidence Curve",
    x = "Time (days)",  # adjust if needed
    y = "Cumulative event probability"
  ) +
  scale_y_reverse(trans = "reverse")  # flip survival to mortality
```


## Mediana przeżycia

```{r}
summary(m0)$table["median"]
```

## 2-letnie przeżycia

```{r}
summary(m0, times = 2*365.25)
```

# Jednoczynnikowa ocena kandydatów na predyktorów

W tabeli wyniki regresji jednoczynnikowych m. Coxa dla zdarzenia `dwhf` oraz 
wybranych zmiennych - kandydatów na predyktorów.  

```{r}
vars <- c("age", "sex", "race", "ejf_per", "bmi", "creat", "klevel", "chfdur", "nsym", 
          "heartrte", "diabp", "sysbp", "functcls", "chfetiol", "prevmi", "angina",
          "diabetes", "hyperten", "diguse", "diuretk", "diuret", "ksupp", "aceinhib",
          "nitrates", "hydral", "vasod")


dwhf_cox_1v <- function(var_name) {
  
  formula <- as.formula(paste("dwhf_surv ~", var_name))
  model <- coxph(formula, data = df_trtmt)
  res <- broom::tidy(model, conf.int = TRUE)
  
  # Add var_name as a column — even if multiple levels
  res$var_names <- var_name
  
  # Optional: remove the intercept row if it's ever present
  res <- res[res$term != "(Intercept)", ]
  
  data.frame(
    var_names = var_name,
    level = res$term,
    hr = round(res$estimate, 3),
    hr_ci_lo = round(res$conf.low, 3),
    hr_ci_up = round(res$conf.high, 3),
    p_value = signif(res$p.value, 3)
  )
}

results <- do.call(rbind, lapply(vars, dwhf_cox_1v)) %>%
  left_join(lista_zmiennych, by='var_names') %>% 
  select(var_names, var_labels, level, everything())

results %>% kable(digits=3) %>% kable_classic_2()
```


 
