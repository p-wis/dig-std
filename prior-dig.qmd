---
title: "Prior digoxin use"
editor: source
code-fold: true
editor_options: 
  chunk_output_type: console
---

```{r}
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(kableExtra))
suppressPackageStartupMessages(library(survival))
suppressPackageStartupMessages(library(survminer))
suppressPackageStartupMessages(library(broom))
suppressPackageStartupMessages(library(broom.helpers))
suppressPackageStartupMessages(library(targets))
suppressPackageStartupMessages(library(gtsummary))
suppressPackageStartupMessages(library(rms))
suppressPackageStartupMessages(library(tidyr))

tar_load(lista_zmiennych)
tar_load(zm_kategoryczne)
tar_load(df_trtmt)
tar_load(dd_df_trmnt)

df_trtmt_ <- df_trtmt %>%
  drop_na(age, sex, race, ejf_per, chestx, bmi, functcls, diuret, aceinhib, prevmi, diabetes, hyperten)

 
options(datadist = "dd_df_trmnt")  # for the rms package

dwhf_surv <- with(df_trtmt_, Surv(dwhfdays,dwhf))
```

# Propensity score model

```{r}

ps_model <- glm(diguse ~ age + sex + race + ejf_per * chestx + bmi + functcls + diuret + aceinhib + prevmi + diabetes + hyperten, data = df_trtmt_, family = binomial)
concordance(ps_model)
AIC(ps_model)
BIC(ps_model)

df_trtmt_$pscore <- predict(ps_model, type = "response")
```

```{r}
ps_model %>% 
  tbl_regression(
    exponentiate = TRUE, 
    tidy_fun = tidy_parameters, 
    intercept=TRUE)
```

# Propensity-adjusted Cox model

```{r}
cox_adj <- cph(dwhf_surv ~ diguse + pscore, data = df_trtmt_, x = TRUE, y = TRUE, surv = TRUE)
```


# Matching 

```{r}
library(MatchIt)

matchit_obj <- matchit(diguse ~ age + sex + race + ejf_per + chestx + bmi + nyha_class +
                         diuret + aceinhib + prevmi + diabetes + hyperten,
                       data = df_trtmt_, method = "nearest", ratio = 1)
df_matched <- match.data(matchit_obj)
```


# Matching diagnosis


# Cox model on matched data

```{r}

dwhf_surv_matched <- with(df_matched, Surv(dwhfdays,dwhf))

cox_matched <- cph(dwhf_surv_matched ~ diguse, data = df_matched, x = TRUE, y = TRUE, surv = TRUE)

summary(cox_matched)
```

```{r}
fit <- survfit(cox_matched, newdata = data.frame(diguse = levels(df_matched$diguse)))

# Plot
ggsurvplot(
  fit,
  data = df_matched,
  fun = 'event',
  legend.labs = levels(df_matched$diguse),
  legend.title = "Digoxin use before trial",
  xlab = "Time (days)",
  ylab = "Survival probability",
  ggtheme = theme_minimal()
)
```

